{"remainingRequest":"/Users/macbook/Documents/Project/vuejs/telkom-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbook/Documents/Project/vuejs/telkom-test/src/views/pages/Test2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbook/Documents/Project/vuejs/telkom-test/src/views/pages/Test2.vue","mtime":1663695823623},{"path":"/Users/macbook/Documents/Project/vuejs/telkom-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Documents/Project/vuejs/telkom-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macbook/Documents/Project/vuejs/telkom-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Documents/Project/vuejs/telkom-test/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVzdDIgZXh0ZW5kcyBWdWUgewogIG15U3RyaW5nID0gJ3RoZSBxdWljayBicm93biBmb3gganVtcHMgdGhlbiBxdWlja2x5IGJsb3cgYWlyIGZveCcKICBteVJlc3VsdCA9ICcnCgogIGdldCBoYW5kbGluZyAoKSB7CiAgICB0aGlzLm15UmVzdWx0ID0gdGhpcy5teVN0cmluZy5zcGxpdCgnICcpCiAgICAvLyBjb25zdCB1bmlxID0gWy4uLm5ldyBTZXQodGhpcy5teVJlc3VsdCldCiAgICBjb25zdCB1bmlxID0gdGhpcy5teVJlc3VsdC5maWx0ZXIoKGVsZW1lbnQsIGluZGV4KSA9PiB7CiAgICAgIHJldHVybiB0aGlzLm15UmVzdWx0LmluZGV4T2YoZWxlbWVudCkgPT09IGluZGV4CiAgICB9KQogICAgcmV0dXJuIHVuaXEKICB9Cn0K"},{"version":3,"sources":["Test2.vue"],"names":[],"mappings":";AAUA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test2.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <section>\n    <h1>Test 2</h1>\n    <div>\n      Input String = {{ myString }} <br/>\n      Out = {{ handling }}\n    </div>\n  </section>\n</template>\n<script>\nimport Vue from 'vue'\n\nexport default class Test2 extends Vue {\n  myString = 'the quick brown fox jumps then quickly blow air fox'\n  myResult = ''\n\n  get handling () {\n    this.myResult = this.myString.split(' ')\n    // const uniq = [...new Set(this.myResult)]\n    const uniq = this.myResult.filter((element, index) => {\n      return this.myResult.indexOf(element) === index\n    })\n    return uniq\n  }\n}\n</script>\n"]}]}